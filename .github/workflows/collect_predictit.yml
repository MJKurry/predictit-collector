name: Collect PredictIt Snapshots

on:
  schedule:
   # - cron: "*/15 * * * *"    # alle 15 Minuten (UTC)
  workflow_dispatch: {}        # manuell startbar

concurrency:
  group: predictit-collector
  cancel-in-progress: true     # kein Stau, neueste Ausführung gewinnt

jobs:
  collect:
    runs-on: ubuntu-latest
    timeout-minutes: 5         # keine Hänger
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true  # schnelle Binärpakete

      # >>> Hier passiert die Magie: Pakete aus DESCRIPTION werden gecached <<<
      - name: Restore R deps (pak cache)
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2        # eigenen Cache-Namespace erzwingen
          working-directory: .    # Wurzel mit DESCRIPTION
          # Wenn du Zusatzpakete willst, hier (werden auch gecached):
          # extra-packages: any::arrow

      - name: Run collector
        run: Rscript scripts/30_predictit_collect_snapshot.R

      - name: Upload snapshot artifact
        uses: actions/upload-artifact@v4
        with:
          name: predictit_snapshots_${{ github.run_number }}
          path: data/snapshots/predictit
